CCS PCM C Compiler, Version 4.057, 6212               08-ene-11 00:06

               Filename: mainLuces.lst

               ROM used: 520 words (6%)
                         Largest free fragment is 2048
               RAM used: 24 (7%) at main() level
                         28 (8%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   1BD
0003:  NOP
.................... #INCLUDE "C:\Archivos de programa\PICC\Devices\16f877a.h" 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOLVP,PUT,NOPROTECT 
.................... #USE delay(clock=20000000) 
*
013C:  MOVLW  32
013D:  MOVWF  04
013E:  BCF    03.7
013F:  MOVF   00,W
0140:  BTFSC  03.2
0141:  GOTO   14F
0142:  MOVLW  06
0143:  MOVWF  78
0144:  CLRF   77
0145:  DECFSZ 77,F
0146:  GOTO   145
0147:  DECFSZ 78,F
0148:  GOTO   144
0149:  MOVLW  7B
014A:  MOVWF  77
014B:  DECFSZ 77,F
014C:  GOTO   14B
014D:  DECFSZ 00,F
014E:  GOTO   142
.................... #BYTE PORTC=0x07  
.................... #BYTE PORTB=0x06  
.................... #BYTE PORTD=0x08  
....................  
.................... #BIT RC0=0x07.0 
.................... #BIT RC1=0x07.1 
.................... #BIT RC2=0x07.2 
.................... #BIT RC3=0x07.3 
.................... #BIT RC4=0x07.4 
....................  
.................... #BIT RB0=0x06.0 
.................... #BIT RB1=0x06.1 
.................... #BIT RB2=0x06.2 
.................... #BIT RB3=0x06.3 
.................... #BIT RB4=0x06.4 
.................... #BIT RB5=0x06.5 
.................... #BIT RB6=0x06.6 
....................  
.................... #BIT RD0=0x08.0//data 
.................... #BIT RD1=0x08.1//clock 
.................... #BIT RD2=0x08.2//reset 
....................  
.................... long useg1=50; 
*
01C8:  MOVLW  32
01C9:  BCF    03.5
01CA:  MOVWF  20
01CB:  CLRF   21
.................... int i,apaga=0,prende=1; 
01CC:  CLRF   23
01CD:  MOVLW  01
01CE:  MOVWF  24
.................... int aux,iaux; 
.................... int num=5,num2=0; 
01CF:  MOVLW  05
01D0:  MOVWF  27
01D1:  CLRF   28
.................... int letpos[6]={0,1,2,3,4,5}; 
01D2:  CLRF   29
01D3:  MOVLW  01
01D4:  MOVWF  2A
01D5:  MOVLW  02
01D6:  MOVWF  2B
01D7:  MOVLW  03
01D8:  MOVWF  2C
01D9:  MOVLW  04
01DA:  MOVWF  2D
01DB:  MOVLW  05
01DC:  MOVWF  2E
.................... int const lether[13][7]={ 
.................... {0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F},  //  	vacio 
.................... {0x0E,0x0E,0x0E,0x0E,0x0A,0x04,0x0E},  //  M 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x0E,0x0E,0x0C,0x0A,0x06,0x0E,0x0E},  //  N 
.................... {0x11,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E},  //  U 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F},  //  L 
.................... {0x00,0x1B,0x1B,0x1B,0x1B,0x1B,0x00},  //  I 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D  
.................... {0x00,0x0F,0x0F,0x03,0x0F,0x0F,0x00},  //  E 
.................... {0x01,0x1E,0x1E,0x11,0x0F,0x0F,0x10},  //  S 
.................... }; 
....................  
....................  
....................  
....................  
.................... //void waitjg(); 
.................... //void waitletra(); 
.................... void waitjg(){delay_us(2);}//delay_us(2) 
*
0063:  MOVLW  03
0064:  MOVWF  77
0065:  DECFSZ 77,F
0066:  GOTO   065
0067:  RETLW  00
.................... void waitletra(){delay_ms(1);}//delay_us(500) 
*
013A:  MOVLW  01
013B:  MOVWF  32
*
014F:  RETLW  00
....................  
.................... //void set0(); 
.................... //void set1(); 
.................... void reset(); 
.................... void set01(); 
.................... void fila(int nu); 
.................... void letrero(); 
.................... void intercambianumletra(); 
.................... void main(void) 
.................... { 
*
01BD:  CLRF   04
01BE:  BCF    03.7
01BF:  MOVLW  1F
01C0:  ANDWF  03,F
01C1:  BSF    03.5
01C2:  BSF    1F.0
01C3:  BSF    1F.1
01C4:  BSF    1F.2
01C5:  BCF    1F.3
01C6:  MOVLW  07
01C7:  MOVWF  1C
....................     long nh=0; 
*
01DF:  CLRF   30
01E0:  CLRF   31
....................     
.................... 	//long useg1=50; 
.................... 	set_tris_b(0x00);  // PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
01E1:  MOVLW  00
01E2:  BSF    03.5
01E3:  MOVWF  06
.................... 	set_tris_d(0x00);  
01E4:  MOVWF  08
.................... 	set_tris_c(0x00); 
*
01DD:  MOVLW  FF
01DE:  MOVWF  2F
*
01E5:  MOVWF  07
01E6:  BCF    03.5
01E7:  MOVWF  2F
....................     PORTB=0; 
01E8:  CLRF   06
....................     PORTC=0; 
01E9:  CLRF   07
.................... 	PORTD=1; 
01EA:  MOVLW  01
01EB:  MOVWF  08
.................... 	reset(); 
01EC:  GOTO   068
....................  
.................... 	while(TRUE) 
....................     {	 
.................... 			nh++;	 
01ED:  INCF   30,F
01EE:  BTFSC  03.2
01EF:  INCF   31,F
.................... 	 	if (nh<=useg1) 
01F0:  MOVF   31,W
01F1:  SUBWF  21,W
01F2:  BTFSS  03.0
01F3:  GOTO   1FA
01F4:  BTFSS  03.2
01F5:  GOTO   1F9
01F6:  MOVF   30,W
01F7:  SUBWF  20,W
01F8:  BTFSC  03.0
.................... 	   	    letrero(); 
01F9:  GOTO   150
....................      	else    
....................       	   {nh=0; 
01FA:  CLRF   31
01FB:  CLRF   30
.................... 			num2++; 
01FC:  INCF   28,F
.................... 			if (num2>=6) 
01FD:  MOVF   28,W
01FE:  SUBLW  05
01FF:  BTFSC  03.0
0200:  GOTO   203
.................... 				{ 
.................... 			    	intercambianumletra(); 
0201:  GOTO   1A6
.................... 					num2=0;	 
0202:  CLRF   28
.................... 				} 
.................... 			num=5-num2; 
0203:  MOVF   28,W
0204:  SUBLW  05
0205:  MOVWF  27
.................... 	      	      	    	  
....................       	   } 
....................      }      	 
0206:  GOTO   1ED
.................... 	 			 
.................... } 
....................  
....................  
.................... /*   
....................  
.................... */ 
....................  
.................... void fila(int nu){ 
....................    //  reset(); 
0207:  SLEEP
....................   PORTC=lether[letpos[0]][nu]; 
*
0098:  MOVF   29,W
0099:  MOVWF  34
009A:  MOVLW  07
009B:  MOVWF  35
009C:  CALL   06E
009D:  MOVF   32,W
009E:  ADDWF  78,W
009F:  CALL   004
00A0:  MOVWF  78
00A1:  MOVWF  07
.................... if (num>=5){	RD0=RC4;set01();   } 
00A2:  MOVF   27,W
00A3:  SUBLW  04
00A4:  BTFSC  03.0
00A5:  GOTO   0AB
00A6:  BTFSS  07.4
00A7:  BCF    08.0
00A8:  BTFSC  07.4
00A9:  BSF    08.0
00AA:  CALL   093
.................... if (num>=4){	RD0=RC3;set01();   } 
00AB:  MOVF   27,W
00AC:  SUBLW  03
00AD:  BTFSC  03.0
00AE:  GOTO   0B4
00AF:  BTFSS  07.3
00B0:  BCF    08.0
00B1:  BTFSC  07.3
00B2:  BSF    08.0
00B3:  CALL   093
.................... if (num>=3){	RD0=RC2;set01();   } 
00B4:  MOVF   27,W
00B5:  SUBLW  02
00B6:  BTFSC  03.0
00B7:  GOTO   0BD
00B8:  BTFSS  07.2
00B9:  BCF    08.0
00BA:  BTFSC  07.2
00BB:  BSF    08.0
00BC:  CALL   093
.................... if (num>=2){	RD0=RC1;set01();   } 
00BD:  MOVF   27,W
00BE:  SUBLW  01
00BF:  BTFSC  03.0
00C0:  GOTO   0C6
00C1:  BTFSS  07.1
00C2:  BCF    08.0
00C3:  BTFSC  07.1
00C4:  BSF    08.0
00C5:  CALL   093
.................... if (num>=1){	RD0=RC0;set01();   } 
00C6:  MOVF   27,W
00C7:  SUBLW  00
00C8:  BTFSC  03.0
00C9:  GOTO   0CF
00CA:  BTFSS  07.0
00CB:  BCF    08.0
00CC:  BTFSC  07.0
00CD:  BSF    08.0
00CE:  CALL   093
.................... RD0=1;set01(); 
00CF:  BSF    08.0
00D0:  CALL   093
....................     for  (i=1;i<5;i++) 
00D1:  MOVLW  01
00D2:  MOVWF  22
00D3:  MOVF   22,W
00D4:  SUBLW  04
00D5:  BTFSS  03.0
00D6:  GOTO   102
....................     { 
....................     PORTC=lether[letpos[i]][nu]; 
00D7:  MOVLW  29
00D8:  ADDWF  22,W
00D9:  MOVWF  04
00DA:  BCF    03.7
00DB:  MOVF   00,W
00DC:  MOVWF  34
00DD:  MOVLW  07
00DE:  MOVWF  35
00DF:  CALL   06E
00E0:  MOVF   32,W
00E1:  ADDWF  78,W
00E2:  CALL   004
00E3:  MOVWF  78
00E4:  MOVWF  07
.................... 	RD0=RC4;set01();	 
00E5:  BTFSS  07.4
00E6:  BCF    08.0
00E7:  BTFSC  07.4
00E8:  BSF    08.0
00E9:  CALL   093
.................... 	RD0=RC3;set01(); 
00EA:  BTFSS  07.3
00EB:  BCF    08.0
00EC:  BTFSC  07.3
00ED:  BSF    08.0
00EE:  CALL   093
.................... 	RD0=RC2;set01(); 
00EF:  BTFSS  07.2
00F0:  BCF    08.0
00F1:  BTFSC  07.2
00F2:  BSF    08.0
00F3:  CALL   093
.................... 	RD0=RC1;set01(); 
00F4:  BTFSS  07.1
00F5:  BCF    08.0
00F6:  BTFSC  07.1
00F7:  BSF    08.0
00F8:  CALL   093
.................... 	RD0=RC0;set01(); 
00F9:  BTFSS  07.0
00FA:  BCF    08.0
00FB:  BTFSC  07.0
00FC:  BSF    08.0
00FD:  CALL   093
.................... 	RD0=1;set01();				 
00FE:  BSF    08.0
00FF:  CALL   093
....................     } 
0100:  INCF   22,F
0101:  GOTO   0D3
....................  PORTC=lether[letpos[5]][nu]; 
0102:  MOVF   2E,W
0103:  MOVWF  34
0104:  MOVLW  07
0105:  MOVWF  35
0106:  CALL   06E
0107:  MOVF   32,W
0108:  ADDWF  78,W
0109:  CALL   004
010A:  MOVWF  78
010B:  MOVWF  07
.................... if (num2>=1){	RD0=RC4;set01();   } 
010C:  MOVF   28,W
010D:  SUBLW  00
010E:  BTFSC  03.0
010F:  GOTO   115
0110:  BTFSS  07.4
0111:  BCF    08.0
0112:  BTFSC  07.4
0113:  BSF    08.0
0114:  CALL   093
.................... if (num2>=2){	RD0=RC3;set01();   } 
0115:  MOVF   28,W
0116:  SUBLW  01
0117:  BTFSC  03.0
0118:  GOTO   11E
0119:  BTFSS  07.3
011A:  BCF    08.0
011B:  BTFSC  07.3
011C:  BSF    08.0
011D:  CALL   093
.................... if (num2>=3){	RD0=RC2;set01();   } 
011E:  MOVF   28,W
011F:  SUBLW  02
0120:  BTFSC  03.0
0121:  GOTO   127
0122:  BTFSS  07.2
0123:  BCF    08.0
0124:  BTFSC  07.2
0125:  BSF    08.0
0126:  CALL   093
.................... if (num2>=4){	RD0=RC1;set01();   } 
0127:  MOVF   28,W
0128:  SUBLW  03
0129:  BTFSC  03.0
012A:  GOTO   130
012B:  BTFSS  07.1
012C:  BCF    08.0
012D:  BTFSC  07.1
012E:  BSF    08.0
012F:  CALL   093
.................... if (num2>=5){	RD0=RC0;set01();   } 
0130:  MOVF   28,W
0131:  SUBLW  04
0132:  BTFSC  03.0
0133:  GOTO   139
0134:  BTFSS  07.0
0135:  BCF    08.0
0136:  BTFSC  07.0
0137:  BSF    08.0
0138:  CALL   093
....................  
.................... } 
0139:  RETLW  00
.................... void intercambianumletra(){ 
....................  
.................... 			aux=letpos[0]; 
*
01A6:  MOVF   29,W
01A7:  MOVWF  25
.................... 	      	for(iaux=0;iaux<6;iaux++) 
01A8:  CLRF   26
01A9:  MOVF   26,W
01AA:  SUBLW  05
01AB:  BTFSS  03.0
01AC:  GOTO   1BA
.................... 	      		{ aux++; 
01AD:  INCF   25,F
.................... 	      	 	  if (aux==13)aux=0; 
01AE:  MOVF   25,W
01AF:  SUBLW  0D
01B0:  BTFSC  03.2
01B1:  CLRF   25
.................... 			      letpos[iaux]=aux;		      	 
01B2:  MOVLW  29
01B3:  ADDWF  26,W
01B4:  MOVWF  04
01B5:  BCF    03.7
01B6:  MOVF   25,W
01B7:  MOVWF  00
.................... 	      	    } 
01B8:  INCF   26,F
01B9:  GOTO   1A9
....................  } 
01BA:  BCF    0A.3
01BB:  BCF    0A.4
01BC:  GOTO   202 (RETURN)
.................... void set01(){ 
....................   
....................  waitjg(); 
*
0093:  CALL   063
....................  RD1=0;//clock 
0094:  BCF    08.1
....................  waitjg(); 
0095:  CALL   063
....................  RD1=1;//clock 
0096:  BSF    08.1
.................... } 
0097:  RETLW  00
.................... void letrero(){ 
....................  
....................      RB6=apaga; 
*
0150:  BTFSS  23.0
0151:  BCF    06.6
0152:  BTFSC  23.0
0153:  BSF    06.6
....................      fila(0); 
0154:  CLRF   32
0155:  CALL   098
....................      RB0=prende; 
0156:  BTFSS  24.0
0157:  BCF    06.0
0158:  BTFSC  24.0
0159:  BSF    06.0
....................      waitletra(); 
015A:  CALL   13A
....................  
.................... 	 RB0=apaga; 
015B:  BTFSS  23.0
015C:  BCF    06.0
015D:  BTFSC  23.0
015E:  BSF    06.0
....................      fila(1); 
015F:  MOVLW  01
0160:  MOVWF  32
0161:  CALL   098
....................      RB1=prende; 
0162:  BTFSS  24.0
0163:  BCF    06.1
0164:  BTFSC  24.0
0165:  BSF    06.1
....................      waitletra(); 
0166:  CALL   13A
....................  
.................... 	 RB1=apaga; 
0167:  BTFSS  23.0
0168:  BCF    06.1
0169:  BTFSC  23.0
016A:  BSF    06.1
....................    fila(2); 
016B:  MOVLW  02
016C:  MOVWF  32
016D:  CALL   098
....................      RB2=prende; 
016E:  BTFSS  24.0
016F:  BCF    06.2
0170:  BTFSC  24.0
0171:  BSF    06.2
....................      waitletra(); 
0172:  CALL   13A
.................... 	    
.................... 	 RB2=apaga; 
0173:  BTFSS  23.0
0174:  BCF    06.2
0175:  BTFSC  23.0
0176:  BSF    06.2
....................    fila(3); 
0177:  MOVLW  03
0178:  MOVWF  32
0179:  CALL   098
....................      RB3=prende; 
017A:  BTFSS  24.0
017B:  BCF    06.3
017C:  BTFSC  24.0
017D:  BSF    06.3
....................      waitletra(); 
017E:  CALL   13A
.................... 	    
.................... 	 RB3=apaga; 
017F:  BTFSS  23.0
0180:  BCF    06.3
0181:  BTFSC  23.0
0182:  BSF    06.3
....................   fila(4); 
0183:  MOVLW  04
0184:  MOVWF  32
0185:  CALL   098
....................      RB4=prende; 
0186:  BTFSS  24.0
0187:  BCF    06.4
0188:  BTFSC  24.0
0189:  BSF    06.4
....................      waitletra(); 
018A:  CALL   13A
.................... 	    
.................... 	 RB4=apaga; 
018B:  BTFSS  23.0
018C:  BCF    06.4
018D:  BTFSC  23.0
018E:  BSF    06.4
....................    fila(5); 
018F:  MOVLW  05
0190:  MOVWF  32
0191:  CALL   098
....................      RB5=prende; 
0192:  BTFSS  24.0
0193:  BCF    06.5
0194:  BTFSC  24.0
0195:  BSF    06.5
....................      waitletra(); 
0196:  CALL   13A
.................... 	    
.................... 	 RB5=apaga; 
0197:  BTFSS  23.0
0198:  BCF    06.5
0199:  BTFSC  23.0
019A:  BSF    06.5
....................    fila(6); 
019B:  MOVLW  06
019C:  MOVWF  32
019D:  CALL   098
....................      RB6=prende; 
019E:  BTFSS  24.0
019F:  BCF    06.6
01A0:  BTFSC  24.0
01A1:  BSF    06.6
....................      waitletra();  
01A2:  CALL   13A
....................  
....................       
.................... } 
01A3:  BCF    0A.3
01A4:  BCF    0A.4
01A5:  GOTO   206 (RETURN)
....................  
....................  
....................  
.................... /* 
.................... void set0(void){ 
....................  RD0=0;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
.................... void set1(void){ 
....................  RD0=1;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
....................  
.................... */ 
.................... void reset(void){ 
....................  //for (irst=0;irst<20;irst++)set0(); 
....................  RD2=0;//data 
*
0068:  BCF    08.2
....................  waitjg(); 
0069:  CALL   063
....................  RD2=1;//clock	 
006A:  BSF    08.2
.................... } 
006B:  BCF    0A.3
006C:  BCF    0A.4
006D:  GOTO   1ED (RETURN)
....................  
....................  
....................  
.................... /* 
.................... 	 RB0=0; 
.................... 	 RB1=0; 
.................... 	 RB2=0; 
.................... 	 RB3=0; 
.................... 	 RB4=0; 
.................... 	 RB5=0; 
.................... 	 RB6=0; 
....................   RD0=1;//data 
....................   RD1=1;//clock 
....................   RD2=1;//reset 
....................  
.................... //	PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
.................... //    PORTB_TRIS = 0b00000000; //1=ENTRADA, 0=SALIDA  
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
