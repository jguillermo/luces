CCS PCM C Compiler, Version 4.057, 6212               08-ene-11 19:37

               Filename: mainLuces.lst

               ROM used: 730 words (9%)
                         Largest free fragment is 2048
               RAM used: 28 (8%) at main() level
                         32 (9%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   273
0003:  NOP
.................... #INCLUDE "C:\Archivos de programa\PICC\Devices\16f877a.h" 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOLVP,PUT,NOPROTECT 
.................... #USE delay(clock=20000000) 
*
013E:  MOVLW  36
013F:  MOVWF  04
0140:  BCF    03.7
0141:  MOVF   00,W
0142:  BTFSC  03.2
0143:  GOTO   151
0144:  MOVLW  06
0145:  MOVWF  78
0146:  CLRF   77
0147:  DECFSZ 77,F
0148:  GOTO   147
0149:  DECFSZ 78,F
014A:  GOTO   146
014B:  MOVLW  7B
014C:  MOVWF  77
014D:  DECFSZ 77,F
014E:  GOTO   14D
014F:  DECFSZ 00,F
0150:  GOTO   144
0151:  RETLW  00
.................... #BYTE PORTC=0x07  
.................... #BYTE PORTB=0x06  
.................... #BYTE PORTD=0x08  
....................  
.................... #BIT RC0=0x07.0 
.................... #BIT RC1=0x07.1 
.................... #BIT RC2=0x07.2 
.................... #BIT RC3=0x07.3 
.................... #BIT RC4=0x07.4 
.................... #BIT RC5=0x07.5 
.................... #BIT RC6=0x07.6 
....................  
.................... #BIT RB0=0x06.0 
.................... #BIT RB1=0x06.1 
.................... #BIT RB2=0x06.2 
.................... #BIT RB3=0x06.3 
.................... #BIT RB4=0x06.4 
.................... #BIT RB5=0x06.5 
.................... #BIT RB6=0x06.6 
....................  
.................... #BIT RD0=0x08.0//data 
.................... #BIT RD1=0x08.1//clock 
.................... #BIT RD2=0x08.2//reset 
....................  
.................... int useg1=8,useg2=200; 
*
027E:  MOVLW  08
027F:  BCF    03.5
0280:  MOVWF  20
0281:  MOVLW  C8
0282:  MOVWF  21
.................... int aux,iaux,auxportb,apbi; 
.................... int i,apaga=0,prende=1; 
0283:  CLRF   27
0284:  MOVLW  01
0285:  MOVWF  28
.................... int num=5,num2=0,posled2=1; 
0286:  MOVLW  05
0287:  MOVWF  29
0288:  CLRF   2A
0289:  MOVLW  01
028A:  MOVWF  2B
.................... int letpos[6]={0,1,2,3,4,5}; 
028B:  CLRF   2C
028C:  MOVWF  2D
028D:  MOVLW  02
028E:  MOVWF  2E
028F:  MOVLW  03
0290:  MOVWF  2F
0291:  MOVLW  04
0292:  MOVWF  30
0293:  MOVLW  05
0294:  MOVWF  31
.................... int const lether[13][7]={ 
.................... {0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F},  //  	vacio 
.................... {0x0E,0x0E,0x0E,0x0E,0x0A,0x04,0x0E},  //  M 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x0E,0x0E,0x0C,0x0A,0x06,0x0E,0x0E},  //  N 
.................... {0x11,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E},  //  U 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x00,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F},  //  L 
.................... {0x00,0x1B,0x1B,0x1B,0x1B,0x1B,0x00},  //  I 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D  
.................... {0x00,0x0F,0x0F,0x03,0x0F,0x0F,0x00},  //  E 
.................... {0x01,0x1E,0x1E,0x11,0x0F,0x0F,0x10},  //  S 
.................... }; 
.................... void waitletra(){delay_ms(1);}//delay_us(500) 
.................... void reset(); 
.................... void set01(); 
.................... void fila(int nu); 
.................... void letrero(); 
.................... void letrero2(); 
.................... void pausaletrero(); 
.................... void intercambianumletra(); 
.................... void main(void) 
.................... { 
*
0273:  CLRF   04
0274:  BCF    03.7
0275:  MOVLW  1F
0276:  ANDWF  03,F
0277:  BSF    03.5
0278:  BSF    1F.0
0279:  BSF    1F.1
027A:  BSF    1F.2
027B:  BCF    1F.3
027C:  MOVLW  07
027D:  MOVWF  1C
....................     int nh=0; 
*
0297:  CLRF   33
....................    int cmde=0,csc=0; 
0298:  CLRF   34
0299:  CLRF   35
.................... 	//long useg1=50; 
.................... 	set_tris_b(0x00);  // PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
029A:  MOVLW  00
029B:  BSF    03.5
029C:  MOVWF  06
.................... 	set_tris_d(0x00);  
029D:  MOVWF  08
.................... 	set_tris_c(0x00); 
*
0295:  MOVLW  FF
0296:  MOVWF  32
*
029E:  MOVWF  07
029F:  BCF    03.5
02A0:  MOVWF  32
....................     PORTB=0; 
02A1:  CLRF   06
....................     PORTC=0; 
02A2:  CLRF   07
.................... 	PORTD=1; 
02A3:  MOVLW  01
02A4:  MOVWF  08
.................... 	reset(); 
02A5:  GOTO   063
....................  
.................... 	while(TRUE) 
....................     {	nh++; 
02A6:  INCF   33,F
.................... 		switch (cmde)  
.................... 				{ 
02A7:  MOVF   34,W
02A8:  BTFSC  03.2
02A9:  GOTO   2AE
02AA:  XORLW  01
02AB:  BTFSC  03.2
02AC:  GOTO   2CA
02AD:  GOTO   2D8
.................... 			    case 0: 
.................... 						 
.................... 						if (nh<=useg1) 
02AE:  MOVF   33,W
02AF:  SUBWF  20,W
02B0:  BTFSS  03.0
02B1:  GOTO   2B4
.................... 	   	    				letrero(); 
02B2:  CALL   152
....................      					else    
02B3:  GOTO   2C0
....................       	   					{nh=0;num2++; 
02B4:  CLRF   33
02B5:  INCF   2A,F
.................... 						     if (num2>=6){intercambianumletra();num2=0;} 
02B6:  MOVF   2A,W
02B7:  SUBLW  05
02B8:  BTFSC  03.0
02B9:  GOTO   2BC
02BA:  GOTO   1B4
02BB:  CLRF   2A
.................... 						     num=5-num2;csc++; 
02BC:  MOVF   2A,W
02BD:  SUBLW  05
02BE:  MOVWF  29
02BF:  INCF   35,F
.................... 							} 
.................... 						if (csc>=20) {cmde=1;csc=0;nh=0;pausaletrero();} 
02C0:  MOVF   35,W
02C1:  SUBLW  13
02C2:  BTFSC  03.0
02C3:  GOTO   2C9
02C4:  MOVLW  01
02C5:  MOVWF  34
02C6:  CLRF   35
02C7:  CLRF   33
02C8:  GOTO   1CB
....................            				break; 
02C9:  GOTO   2D8
....................  
....................  
....................     			case 1: 
.................... 						if (nh<=useg2) 
02CA:  MOVF   33,W
02CB:  SUBWF  21,W
02CC:  BTFSC  03.0
.................... 	   	    				letrero2(); 
02CD:  GOTO   1D7
....................      					else    
....................       	   					{nh=0;posled2++; 
02CE:  CLRF   33
02CF:  INCF   2B,F
.................... 							 if (posled2>=8){	posled2=1;cmde=0;} 
02D0:  MOVF   2B,W
02D1:  SUBLW  07
02D2:  BTFSC  03.0
02D3:  GOTO   2D7
02D4:  MOVLW  01
02D5:  MOVWF  2B
02D6:  CLRF   34
.................... 							} 
.................... 						break; 
02D7:  GOTO   2D8
.................... 				 } 
....................  
....................      }      	 
02D8:  GOTO   2A6
.................... 	 			 
.................... } 
....................  
....................  
.................... /*   
....................  
.................... */ 
....................  
.................... void fila(int nu){ 
....................    //  reset(); 
02D9:  SLEEP
....................   PORTC=lether[letpos[0]][nu]; 
*
009C:  MOVF   2C,W
009D:  MOVWF  38
009E:  MOVLW  07
009F:  MOVWF  39
00A0:  CALL   06C
00A1:  MOVF   36,W
00A2:  ADDWF  78,W
00A3:  CALL   004
00A4:  MOVWF  78
00A5:  MOVWF  07
.................... if (num>=5){	RD0=RC4;set01();   } 
00A6:  MOVF   29,W
00A7:  SUBLW  04
00A8:  BTFSC  03.0
00A9:  GOTO   0AF
00AA:  BTFSS  07.4
00AB:  BCF    08.0
00AC:  BTFSC  07.4
00AD:  BSF    08.0
00AE:  CALL   091
.................... if (num>=4){	RD0=RC3;set01();   } 
00AF:  MOVF   29,W
00B0:  SUBLW  03
00B1:  BTFSC  03.0
00B2:  GOTO   0B8
00B3:  BTFSS  07.3
00B4:  BCF    08.0
00B5:  BTFSC  07.3
00B6:  BSF    08.0
00B7:  CALL   091
.................... if (num>=3){	RD0=RC2;set01();   } 
00B8:  MOVF   29,W
00B9:  SUBLW  02
00BA:  BTFSC  03.0
00BB:  GOTO   0C1
00BC:  BTFSS  07.2
00BD:  BCF    08.0
00BE:  BTFSC  07.2
00BF:  BSF    08.0
00C0:  CALL   091
.................... if (num>=2){	RD0=RC1;set01();   } 
00C1:  MOVF   29,W
00C2:  SUBLW  01
00C3:  BTFSC  03.0
00C4:  GOTO   0CA
00C5:  BTFSS  07.1
00C6:  BCF    08.0
00C7:  BTFSC  07.1
00C8:  BSF    08.0
00C9:  CALL   091
.................... if (num>=1){	RD0=RC0;set01();   } 
00CA:  MOVF   29,W
00CB:  SUBLW  00
00CC:  BTFSC  03.0
00CD:  GOTO   0D3
00CE:  BTFSS  07.0
00CF:  BCF    08.0
00D0:  BTFSC  07.0
00D1:  BSF    08.0
00D2:  CALL   091
.................... RD0=1;set01(); 
00D3:  BSF    08.0
00D4:  CALL   091
....................     for  (i=1;i<5;i++) 
00D5:  MOVLW  01
00D6:  MOVWF  26
00D7:  MOVF   26,W
00D8:  SUBLW  04
00D9:  BTFSS  03.0
00DA:  GOTO   106
....................     { 
....................     PORTC=lether[letpos[i]][nu]; 
00DB:  MOVLW  2C
00DC:  ADDWF  26,W
00DD:  MOVWF  04
00DE:  BCF    03.7
00DF:  MOVF   00,W
00E0:  MOVWF  38
00E1:  MOVLW  07
00E2:  MOVWF  39
00E3:  CALL   06C
00E4:  MOVF   36,W
00E5:  ADDWF  78,W
00E6:  CALL   004
00E7:  MOVWF  78
00E8:  MOVWF  07
.................... 	RD0=RC4;set01();	 
00E9:  BTFSS  07.4
00EA:  BCF    08.0
00EB:  BTFSC  07.4
00EC:  BSF    08.0
00ED:  CALL   091
.................... 	RD0=RC3;set01(); 
00EE:  BTFSS  07.3
00EF:  BCF    08.0
00F0:  BTFSC  07.3
00F1:  BSF    08.0
00F2:  CALL   091
.................... 	RD0=RC2;set01(); 
00F3:  BTFSS  07.2
00F4:  BCF    08.0
00F5:  BTFSC  07.2
00F6:  BSF    08.0
00F7:  CALL   091
.................... 	RD0=RC1;set01(); 
00F8:  BTFSS  07.1
00F9:  BCF    08.0
00FA:  BTFSC  07.1
00FB:  BSF    08.0
00FC:  CALL   091
.................... 	RD0=RC0;set01(); 
00FD:  BTFSS  07.0
00FE:  BCF    08.0
00FF:  BTFSC  07.0
0100:  BSF    08.0
0101:  CALL   091
.................... 	RD0=1;set01();				 
0102:  BSF    08.0
0103:  CALL   091
....................     } 
0104:  INCF   26,F
0105:  GOTO   0D7
....................  PORTC=lether[letpos[5]][nu]; 
0106:  MOVF   31,W
0107:  MOVWF  38
0108:  MOVLW  07
0109:  MOVWF  39
010A:  CALL   06C
010B:  MOVF   36,W
010C:  ADDWF  78,W
010D:  CALL   004
010E:  MOVWF  78
010F:  MOVWF  07
.................... if (num2>=1){	RD0=RC4;set01();   } 
0110:  MOVF   2A,W
0111:  SUBLW  00
0112:  BTFSC  03.0
0113:  GOTO   119
0114:  BTFSS  07.4
0115:  BCF    08.0
0116:  BTFSC  07.4
0117:  BSF    08.0
0118:  CALL   091
.................... if (num2>=2){	RD0=RC3;set01();   } 
0119:  MOVF   2A,W
011A:  SUBLW  01
011B:  BTFSC  03.0
011C:  GOTO   122
011D:  BTFSS  07.3
011E:  BCF    08.0
011F:  BTFSC  07.3
0120:  BSF    08.0
0121:  CALL   091
.................... if (num2>=3){	RD0=RC2;set01();   } 
0122:  MOVF   2A,W
0123:  SUBLW  02
0124:  BTFSC  03.0
0125:  GOTO   12B
0126:  BTFSS  07.2
0127:  BCF    08.0
0128:  BTFSC  07.2
0129:  BSF    08.0
012A:  CALL   091
.................... if (num2>=4){	RD0=RC1;set01();   } 
012B:  MOVF   2A,W
012C:  SUBLW  03
012D:  BTFSC  03.0
012E:  GOTO   134
012F:  BTFSS  07.1
0130:  BCF    08.0
0131:  BTFSC  07.1
0132:  BSF    08.0
0133:  CALL   091
.................... if (num2>=5){	RD0=RC0;set01();   } 
0134:  MOVF   2A,W
0135:  SUBLW  04
0136:  BTFSC  03.0
0137:  GOTO   13D
0138:  BTFSS  07.0
0139:  BCF    08.0
013A:  BTFSC  07.0
013B:  BSF    08.0
013C:  CALL   091
....................  
.................... } 
013D:  RETLW  00
.................... void intercambianumletra(){ 
....................  
.................... 			aux=letpos[0]; 
*
01B4:  MOVF   2C,W
01B5:  MOVWF  22
.................... 	      	for(iaux=0;iaux<6;iaux++) 
01B6:  CLRF   23
01B7:  MOVF   23,W
01B8:  SUBLW  05
01B9:  BTFSS  03.0
01BA:  GOTO   1C8
.................... 	      		{ aux++; 
01BB:  INCF   22,F
.................... 	      	 	  if (aux==13)aux=0; 
01BC:  MOVF   22,W
01BD:  SUBLW  0D
01BE:  BTFSC  03.2
01BF:  CLRF   22
.................... 			      letpos[iaux]=aux;		      	 
01C0:  MOVLW  2C
01C1:  ADDWF  23,W
01C2:  MOVWF  04
01C3:  BCF    03.7
01C4:  MOVF   22,W
01C5:  MOVWF  00
.................... 	      	    } 
01C6:  INCF   23,F
01C7:  GOTO   1B7
....................  } 
01C8:  BCF    0A.3
01C9:  BCF    0A.4
01CA:  GOTO   2BB (RETURN)
.................... void set01(){ 
....................   
....................  delay_us(2); 
*
0091:  MOVLW  03
0092:  MOVWF  77
0093:  DECFSZ 77,F
0094:  GOTO   093
....................  RD1=0;//clock 
0095:  BCF    08.1
....................  delay_us(2); 
0096:  MOVLW  03
0097:  MOVWF  77
0098:  DECFSZ 77,F
0099:  GOTO   098
....................  RD1=1;//clock 
009A:  BSF    08.1
.................... } 
009B:  RETLW  00
.................... void letrero(){ 
....................  /* 
.................... PORTB=0X00; 
.................... fila(0); 
.................... PORTB=0X01; 
.................... delay_ms(1); 
....................  
.................... for(apbi=1;apbi<7;apbi++) 
.................... 	{  
....................  
.................... auxportb=PORTB; 
.................... PORTB=0X00; 
.................... fila(apbi); 
.................... PORTB=auxportb*2; 
.................... delay_ms(1);	 		      	 
....................     } 
....................  
....................    
....................   
.................... auxportb,apbi; */ 
.................... 	 RB6=apaga; 
*
0152:  BTFSS  27.0
0153:  BCF    06.6
0154:  BTFSC  27.0
0155:  BSF    06.6
....................      fila(0); 
0156:  CLRF   36
0157:  CALL   09C
....................      RB0=prende; 
0158:  BTFSS  28.0
0159:  BCF    06.0
015A:  BTFSC  28.0
015B:  BSF    06.0
....................      delay_ms(1); 
015C:  MOVLW  01
015D:  MOVWF  36
015E:  CALL   13E
....................  
.................... 	 RB0=apaga; 
015F:  BTFSS  27.0
0160:  BCF    06.0
0161:  BTFSC  27.0
0162:  BSF    06.0
....................      fila(1); 
0163:  MOVLW  01
0164:  MOVWF  36
0165:  CALL   09C
....................      RB1=prende; 
0166:  BTFSS  28.0
0167:  BCF    06.1
0168:  BTFSC  28.0
0169:  BSF    06.1
....................      delay_ms(1); 
016A:  MOVLW  01
016B:  MOVWF  36
016C:  CALL   13E
....................  
.................... 	 RB1=apaga; 
016D:  BTFSS  27.0
016E:  BCF    06.1
016F:  BTFSC  27.0
0170:  BSF    06.1
....................    fila(2); 
0171:  MOVLW  02
0172:  MOVWF  36
0173:  CALL   09C
....................      RB2=prende; 
0174:  BTFSS  28.0
0175:  BCF    06.2
0176:  BTFSC  28.0
0177:  BSF    06.2
....................      delay_ms(1); 
0178:  MOVLW  01
0179:  MOVWF  36
017A:  CALL   13E
.................... 	    
.................... 	 RB2=apaga; 
017B:  BTFSS  27.0
017C:  BCF    06.2
017D:  BTFSC  27.0
017E:  BSF    06.2
....................    fila(3); 
017F:  MOVLW  03
0180:  MOVWF  36
0181:  CALL   09C
....................      RB3=prende; 
0182:  BTFSS  28.0
0183:  BCF    06.3
0184:  BTFSC  28.0
0185:  BSF    06.3
....................      delay_ms(1); 
0186:  MOVLW  01
0187:  MOVWF  36
0188:  CALL   13E
.................... 	    
.................... 	 RB3=apaga; 
0189:  BTFSS  27.0
018A:  BCF    06.3
018B:  BTFSC  27.0
018C:  BSF    06.3
....................   fila(4); 
018D:  MOVLW  04
018E:  MOVWF  36
018F:  CALL   09C
....................      RB4=prende; 
0190:  BTFSS  28.0
0191:  BCF    06.4
0192:  BTFSC  28.0
0193:  BSF    06.4
....................      delay_ms(1); 
0194:  MOVLW  01
0195:  MOVWF  36
0196:  CALL   13E
.................... 	    
.................... 	 RB4=apaga; 
0197:  BTFSS  27.0
0198:  BCF    06.4
0199:  BTFSC  27.0
019A:  BSF    06.4
....................    fila(5); 
019B:  MOVLW  05
019C:  MOVWF  36
019D:  CALL   09C
....................      RB5=prende; 
019E:  BTFSS  28.0
019F:  BCF    06.5
01A0:  BTFSC  28.0
01A1:  BSF    06.5
....................      delay_ms(1); 
01A2:  MOVLW  01
01A3:  MOVWF  36
01A4:  CALL   13E
.................... 	    
.................... 	 RB5=apaga; 
01A5:  BTFSS  27.0
01A6:  BCF    06.5
01A7:  BTFSC  27.0
01A8:  BSF    06.5
....................    fila(6); 
01A9:  MOVLW  06
01AA:  MOVWF  36
01AB:  CALL   09C
....................      RB6=prende; 
01AC:  BTFSS  28.0
01AD:  BCF    06.6
01AE:  BTFSC  28.0
01AF:  BSF    06.6
....................      delay_ms(1); 
01B0:  MOVLW  01
01B1:  MOVWF  36
01B2:  CALL   13E
....................  
....................      
.................... } 
01B3:  RETLW  00
....................  
.................... void letrero2(){ 
....................  /* 
.................... PORTB=0X00; 
.................... fila(0); 
.................... PORTB=0X01; 
.................... delay_ms(1); 
....................  
.................... for(apbi=1;apbi<7;apbi++) 
.................... 	{  
....................  
.................... auxportb=PORTB; 
.................... PORTB=0X00; 
.................... fila(apbi); 
.................... PORTB=auxportb*2; 
.................... delay_ms(1);	 		      	 
....................     } 
....................  
....................    
....................   
.................... auxportb,apbi; posled2*/ 
.................... 	 PORTB=0X00; 
*
01D7:  CLRF   06
.................... 	 PORTC=0X00; 
01D8:  CLRF   07
....................      fila(0); 
01D9:  CLRF   36
01DA:  CALL   09C
....................      RC0=prende; 
01DB:  BTFSS  28.0
01DC:  BCF    07.0
01DD:  BTFSC  28.0
01DE:  BSF    07.0
....................      PORTB=PORTC<<posled2; 
01DF:  MOVF   07,W
01E0:  MOVWF  06
01E1:  MOVF   2B,W
01E2:  MOVWF  78
01E3:  BTFSC  03.2
01E4:  GOTO   1E9
01E5:  BCF    03.0
01E6:  RLF    06,F
01E7:  DECFSZ 78,F
01E8:  GOTO   1E5
.................... 	 delay_ms(1); 
01E9:  MOVLW  01
01EA:  MOVWF  36
01EB:  CALL   13E
....................  
.................... 	  PORTB=0X00; 
01EC:  CLRF   06
.................... 	 PORTC=0X00; 
01ED:  CLRF   07
....................      fila(1); 
01EE:  MOVLW  01
01EF:  MOVWF  36
01F0:  CALL   09C
....................      RC1=prende; 
01F1:  BTFSS  28.0
01F2:  BCF    07.1
01F3:  BTFSC  28.0
01F4:  BSF    07.1
....................      PORTB=PORTC<<posled2; 
01F5:  MOVF   07,W
01F6:  MOVWF  06
01F7:  MOVF   2B,W
01F8:  MOVWF  78
01F9:  BTFSC  03.2
01FA:  GOTO   1FF
01FB:  BCF    03.0
01FC:  RLF    06,F
01FD:  DECFSZ 78,F
01FE:  GOTO   1FB
.................... 	 delay_ms(1); 
01FF:  MOVLW  01
0200:  MOVWF  36
0201:  CALL   13E
....................  
.................... 	  PORTB=0X00; 
0202:  CLRF   06
.................... 	 PORTC=0X00; 
0203:  CLRF   07
....................    fila(2); 
0204:  MOVLW  02
0205:  MOVWF  36
0206:  CALL   09C
....................      RC2=prende; 
0207:  BTFSS  28.0
0208:  BCF    07.2
0209:  BTFSC  28.0
020A:  BSF    07.2
....................      PORTB=PORTC<<posled2; 
020B:  MOVF   07,W
020C:  MOVWF  06
020D:  MOVF   2B,W
020E:  MOVWF  78
020F:  BTFSC  03.2
0210:  GOTO   215
0211:  BCF    03.0
0212:  RLF    06,F
0213:  DECFSZ 78,F
0214:  GOTO   211
.................... 	 delay_ms(1); 
0215:  MOVLW  01
0216:  MOVWF  36
0217:  CALL   13E
.................... 	    
.................... 	  PORTB=0X00; 
0218:  CLRF   06
.................... 	 PORTC=0X00; 
0219:  CLRF   07
....................    fila(3); 
021A:  MOVLW  03
021B:  MOVWF  36
021C:  CALL   09C
....................      RC3=prende; 
021D:  BTFSS  28.0
021E:  BCF    07.3
021F:  BTFSC  28.0
0220:  BSF    07.3
....................      PORTB=PORTC<<posled2; 
0221:  MOVF   07,W
0222:  MOVWF  06
0223:  MOVF   2B,W
0224:  MOVWF  78
0225:  BTFSC  03.2
0226:  GOTO   22B
0227:  BCF    03.0
0228:  RLF    06,F
0229:  DECFSZ 78,F
022A:  GOTO   227
.................... 	 delay_ms(1); 
022B:  MOVLW  01
022C:  MOVWF  36
022D:  CALL   13E
.................... 	    
.................... 	 PORTB=0X00; 
022E:  CLRF   06
.................... 	 PORTC=0X00; 
022F:  CLRF   07
....................   fila(4); 
0230:  MOVLW  04
0231:  MOVWF  36
0232:  CALL   09C
....................      RC4=prende; 
0233:  BTFSS  28.0
0234:  BCF    07.4
0235:  BTFSC  28.0
0236:  BSF    07.4
....................      PORTB=PORTC<<posled2; 
0237:  MOVF   07,W
0238:  MOVWF  06
0239:  MOVF   2B,W
023A:  MOVWF  78
023B:  BTFSC  03.2
023C:  GOTO   241
023D:  BCF    03.0
023E:  RLF    06,F
023F:  DECFSZ 78,F
0240:  GOTO   23D
.................... 	 delay_ms(1); 
0241:  MOVLW  01
0242:  MOVWF  36
0243:  CALL   13E
.................... 	    
.................... 	  PORTB=0X00; 
0244:  CLRF   06
.................... 	 PORTC=0X00; 
0245:  CLRF   07
....................    fila(5); 
0246:  MOVLW  05
0247:  MOVWF  36
0248:  CALL   09C
....................      RC5=prende; 
0249:  BTFSS  28.0
024A:  BCF    07.5
024B:  BTFSC  28.0
024C:  BSF    07.5
....................      PORTB=PORTC<<posled2; 
024D:  MOVF   07,W
024E:  MOVWF  06
024F:  MOVF   2B,W
0250:  MOVWF  78
0251:  BTFSC  03.2
0252:  GOTO   257
0253:  BCF    03.0
0254:  RLF    06,F
0255:  DECFSZ 78,F
0256:  GOTO   253
.................... 	 delay_ms(1); 
0257:  MOVLW  01
0258:  MOVWF  36
0259:  CALL   13E
.................... 	    
.................... 	 PORTB=0X00; 
025A:  CLRF   06
.................... 	 PORTC=0X00; 
025B:  CLRF   07
....................    fila(6); 
025C:  MOVLW  06
025D:  MOVWF  36
025E:  CALL   09C
....................      RC6=prende; 
025F:  BTFSS  28.0
0260:  BCF    07.6
0261:  BTFSC  28.0
0262:  BSF    07.6
....................      PORTB=PORTC<<posled2; 
0263:  MOVF   07,W
0264:  MOVWF  06
0265:  MOVF   2B,W
0266:  MOVWF  78
0267:  BTFSC  03.2
0268:  GOTO   26D
0269:  BCF    03.0
026A:  RLF    06,F
026B:  DECFSZ 78,F
026C:  GOTO   269
.................... 	 delay_ms(1); 
026D:  MOVLW  01
026E:  MOVWF  36
026F:  CALL   13E
....................  
....................      
.................... } 
0270:  BCF    0A.3
0271:  BCF    0A.4
0272:  GOTO   2D7 (RETURN)
....................  
....................  
.................... /* 
.................... void set0(void){ 
....................  RD0=0;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
.................... void set1(void){ 
....................  RD0=1;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
....................  
.................... */ 
.................... void reset(void){ 
....................  //for (irst=0;irst<20;irst++)set0(); 
....................  RD2=0;//data 
*
0063:  BCF    08.2
....................  delay_us(2); 
0064:  MOVLW  03
0065:  MOVWF  77
0066:  DECFSZ 77,F
0067:  GOTO   066
....................  RD2=1;//clock	 
0068:  BSF    08.2
.................... } 
0069:  BCF    0A.3
006A:  BCF    0A.4
006B:  GOTO   2A6 (RETURN)
....................  
.................... void pausaletrero(void){ 
.................... for(apbi=1;apbi<200;apbi++) 
*
01CB:  MOVLW  01
01CC:  MOVWF  25
01CD:  MOVF   25,W
01CE:  SUBLW  C7
01CF:  BTFSS  03.0
01D0:  GOTO   1D4
.................... 	{  
.................... letrero();	 		      	 
01D1:  CALL   152
....................     } 
01D2:  INCF   25,F
01D3:  GOTO   1CD
....................  
.................... } 
01D4:  BCF    0A.3
01D5:  BCF    0A.4
01D6:  GOTO   2C9 (RETURN)
....................  
....................  
.................... /* 
.................... 	 RB0=0; 
.................... 	 RB1=0; 
.................... 	 RB2=0; 
.................... 	 RB3=0; 
.................... 	 RB4=0; 
.................... 	 RB5=0; 
.................... 	 RB6=0; 
....................   RD0=1;//data 
....................   RD1=1;//clock 
....................   RD2=1;//reset 
....................  
.................... //	PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
.................... //    PORTB_TRIS = 0b00000000; //1=ENTRADA, 0=SALIDA  
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
