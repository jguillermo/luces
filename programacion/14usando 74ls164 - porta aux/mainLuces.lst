CCS PCM C Compiler, Version 4.057, 6212               07-ene-11 17:43

               Filename: mainLuces.lst

               ROM used: 392 words (5%)
                         Largest free fragment is 2048
               RAM used: 24 (7%) at main() level
                         26 (7%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   137
0003:  NOP
.................... #INCLUDE "C:\Archivos de programa\PICC\Devices\16f877a.h" 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOLVP,PUT,NOPROTECT 
.................... #USE delay(clock=20000000) 
*
00CB:  MOVLW  31
00CC:  MOVWF  04
00CD:  BCF    03.7
00CE:  MOVF   00,W
00CF:  BTFSC  03.2
00D0:  GOTO   0DE
00D1:  MOVLW  06
00D2:  MOVWF  78
00D3:  CLRF   77
00D4:  DECFSZ 77,F
00D5:  GOTO   0D4
00D6:  DECFSZ 78,F
00D7:  GOTO   0D3
00D8:  MOVLW  7B
00D9:  MOVWF  77
00DA:  DECFSZ 77,F
00DB:  GOTO   0DA
00DC:  DECFSZ 00,F
00DD:  GOTO   0D1
.................... #BYTE PORTC=0x07  
.................... #BYTE PORTB=0x06  
.................... #BYTE PORTD=0x08  
....................  
.................... #BIT RC0=0x07.0 
.................... #BIT RC1=0x07.1 
.................... #BIT RC2=0x07.2 
.................... #BIT RC3=0x07.3 
.................... #BIT RC4=0x07.4 
....................  
.................... #BIT RB0=0x06.0 
.................... #BIT RB1=0x06.1 
.................... #BIT RB2=0x06.2 
.................... #BIT RB3=0x06.3 
.................... #BIT RB4=0x06.4 
.................... #BIT RB5=0x06.5 
.................... #BIT RB6=0x06.6 
....................  
.................... #BIT RD0=0x08.0//data 
.................... #BIT RD1=0x08.1//clock 
.................... #BIT RD2=0x08.2//reset 
....................  
.................... long useg1=50; 
*
0142:  MOVLW  32
0143:  BCF    03.5
0144:  MOVWF  20
0145:  CLRF   21
.................... int i,apaga=0,prende=1; 
0146:  CLRF   23
0147:  MOVLW  01
0148:  MOVWF  24
.................... int letpos[6]={0,1,2,3,4,5}; 
0149:  CLRF   25
014A:  MOVWF  26
014B:  MOVLW  02
014C:  MOVWF  27
014D:  MOVLW  03
014E:  MOVWF  28
014F:  MOVLW  04
0150:  MOVWF  29
0151:  MOVLW  05
0152:  MOVWF  2A
.................... int const lether[13][7]={ 
.................... {0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F},  //  	vacio 
.................... {0x0E,0x0E,0x0E,0x0E,0x0A,0x04,0x0E},  //  M 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x0E,0x0E,0x0C,0x0A,0x06,0x0E,0x0E},  //  N 
.................... {0x11,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E},  //  U 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x01,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F},  //  L 
.................... {0x11,0x1B,0x1B,0x1B,0x1B,0x1B,0x11},  //  I 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D 
.................... {0x0E,0x0E,0x0E,0x00,0x0E,0x0E,0x11},  //  A 
.................... {0x01,0x16,0x16,0x16,0x16,0x16,0x01},  //  D  
.................... {0x00,0x0F,0x0F,0x03,0x0F,0x0F,0x00},  //  E 
.................... {0x01,0x1E,0x1E,0x11,0x0F,0x0F,0x10},  //  S 
.................... }; 
....................  
....................  
....................  
....................  
.................... //void waitjg(); 
.................... //void waitletra(); 
.................... void waitjg(){delay_us(2);}//delay_us(2) 
*
0063:  MOVLW  03
0064:  MOVWF  77
0065:  DECFSZ 77,F
0066:  GOTO   065
0067:  RETLW  00
.................... void waitletra(){delay_ms(1000);}//delay_us(500) 
*
00C7:  MOVLW  04
00C8:  MOVWF  30
00C9:  MOVLW  FA
00CA:  MOVWF  31
*
00DE:  DECFSZ 30,F
00DF:  GOTO   0C9
00E0:  RETLW  00
....................  
.................... void piz(int let,int pos); 
.................... void pde(int let,int pos); 
.................... //void set0(); 
.................... //void set1(); 
.................... void reset(); 
.................... void set01(); 
.................... void fila(int nu); 
.................... void letrero(); 
....................  
.................... void main(void) 
.................... { 
*
0137:  CLRF   04
0138:  BCF    03.7
0139:  MOVLW  1F
013A:  ANDWF  03,F
013B:  BSF    03.5
013C:  BSF    1F.0
013D:  BSF    1F.1
013E:  BSF    1F.2
013F:  BCF    1F.3
0140:  MOVLW  07
0141:  MOVWF  1C
....................     long nh=0; 
*
0155:  CLRF   2C
0156:  CLRF   2D
....................     
.................... 	//long useg1=50; 
.................... 	int aux,iaux; 
.................... 	set_tris_b(0x00);  // PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
0157:  MOVLW  00
0158:  BSF    03.5
0159:  MOVWF  06
.................... 	set_tris_d(0x00);  
015A:  MOVWF  08
.................... 	set_tris_c(0x00); 
*
0153:  MOVLW  FF
0154:  MOVWF  2B
*
015B:  MOVWF  07
015C:  BCF    03.5
015D:  MOVWF  2B
....................     PORTB=0; 
015E:  CLRF   06
....................     PORTC=0; 
015F:  CLRF   07
.................... 	PORTD=1; 
0160:  MOVLW  01
0161:  MOVWF  08
.................... 	reset(); 
0162:  GOTO   068
....................  
.................... 	while(TRUE) 
....................     {	 
.................... 			nh++;	 
0163:  INCF   2C,F
0164:  BTFSC  03.2
0165:  INCF   2D,F
.................... 	 	if (nh<=useg1) 
0166:  MOVF   2D,W
0167:  SUBWF  21,W
0168:  BTFSS  03.0
0169:  GOTO   170
016A:  BTFSS  03.2
016B:  GOTO   16F
016C:  MOVF   2C,W
016D:  SUBWF  20,W
016E:  BTFSC  03.0
.................... 	   	    letrero(); 
016F:  GOTO   0E1
....................      	else    
....................       	   {nh=0; 
0170:  CLRF   2D
0171:  CLRF   2C
.................... 	      	aux=letpos[0]; 
0172:  MOVF   25,W
0173:  MOVWF  2E
.................... 	      	for(iaux=0;iaux<6;iaux++) 
0174:  CLRF   2F
0175:  MOVF   2F,W
0176:  SUBLW  05
0177:  BTFSS  03.0
0178:  GOTO   186
.................... 	      		{ aux++; 
0179:  INCF   2E,F
.................... 	      	 	  if (aux==13)aux=0; 
017A:  MOVF   2E,W
017B:  SUBLW  0D
017C:  BTFSC  03.2
017D:  CLRF   2E
.................... 			      letpos[iaux]=aux;		      	 
017E:  MOVLW  25
017F:  ADDWF  2F,W
0180:  MOVWF  04
0181:  BCF    03.7
0182:  MOVF   2E,W
0183:  MOVWF  00
.................... 	      	    }      	    	  
0184:  INCF   2F,F
0185:  GOTO   175
....................       	   } 
....................      }      	 
0186:  GOTO   163
.................... 	 			 
.................... } 
....................  
....................  
.................... /*   
....................  
.................... */ 
....................  
.................... void fila(int nu){ 
....................    //  reset(); 
0187:  SLEEP
....................   
....................     for  (i=0;i<6;i++) 
*
0073:  CLRF   22
0074:  MOVF   22,W
0075:  SUBLW  05
0076:  BTFSS  03.0
0077:  GOTO   0C6
....................     { 
....................     PORTC=lether[letpos[i]][nu]; 
0078:  MOVLW  25
0079:  ADDWF  22,W
007A:  MOVWF  04
007B:  BCF    03.7
007C:  MOVF   00,W
007D:  MOVWF  32
007E:  MOVLW  07
007F:  MOVWF  33
*
00A4:  MOVF   30,W
00A5:  ADDWF  78,W
00A6:  CALL   004
00A7:  MOVWF  78
00A8:  MOVWF  07
.................... 	RD0=RC4;set01();	 
00A9:  BTFSS  07.4
00AA:  BCF    08.0
00AB:  BTFSC  07.4
00AC:  BSF    08.0
00AD:  CALL   06E
.................... 	RD0=RC3;set01(); 
00AE:  BTFSS  07.3
00AF:  BCF    08.0
00B0:  BTFSC  07.3
00B1:  BSF    08.0
00B2:  CALL   06E
.................... 	RD0=RC2;set01(); 
00B3:  BTFSS  07.2
00B4:  BCF    08.0
00B5:  BTFSC  07.2
00B6:  BSF    08.0
00B7:  CALL   06E
.................... 	RD0=RC1;set01(); 
00B8:  BTFSS  07.1
00B9:  BCF    08.0
00BA:  BTFSC  07.1
00BB:  BSF    08.0
00BC:  CALL   06E
.................... 	RD0=RC0;set01(); 
00BD:  BTFSS  07.0
00BE:  BCF    08.0
00BF:  BTFSC  07.0
00C0:  BSF    08.0
00C1:  CALL   06E
.................... 	RD0=1;set01();				 
00C2:  BSF    08.0
00C3:  CALL   06E
....................     } 
00C4:  INCF   22,F
00C5:  GOTO   074
.................... } 
00C6:  RETLW  00
....................  
....................  
.................... void set01(){ 
....................   
....................  waitjg(); 
*
006E:  CALL   063
....................  RD1=0;//clock 
006F:  BCF    08.1
....................  waitjg(); 
0070:  CALL   063
....................  RD1=1;//clock 
0071:  BSF    08.1
.................... } 
0072:  RETLW  00
.................... void letrero(){ 
....................  
....................      RB6=apaga; 
*
00E1:  BTFSS  23.0
00E2:  BCF    06.6
00E3:  BTFSC  23.0
00E4:  BSF    06.6
....................      fila(0); 
00E5:  CLRF   30
00E6:  CALL   073
....................      RB0=prende; 
00E7:  BTFSS  24.0
00E8:  BCF    06.0
00E9:  BTFSC  24.0
00EA:  BSF    06.0
....................      waitletra(); 
00EB:  CALL   0C7
....................  
.................... 	 RB0=apaga; 
00EC:  BTFSS  23.0
00ED:  BCF    06.0
00EE:  BTFSC  23.0
00EF:  BSF    06.0
....................      fila(1); 
00F0:  MOVLW  01
00F1:  MOVWF  30
00F2:  CALL   073
....................      RB1=prende; 
00F3:  BTFSS  24.0
00F4:  BCF    06.1
00F5:  BTFSC  24.0
00F6:  BSF    06.1
....................      waitletra(); 
00F7:  CALL   0C7
....................  
.................... 	 RB1=apaga; 
00F8:  BTFSS  23.0
00F9:  BCF    06.1
00FA:  BTFSC  23.0
00FB:  BSF    06.1
....................    fila(2); 
00FC:  MOVLW  02
00FD:  MOVWF  30
00FE:  CALL   073
....................      RB2=prende; 
00FF:  BTFSS  24.0
0100:  BCF    06.2
0101:  BTFSC  24.0
0102:  BSF    06.2
....................      waitletra(); 
0103:  CALL   0C7
.................... 	    
.................... 	 RB2=apaga; 
0104:  BTFSS  23.0
0105:  BCF    06.2
0106:  BTFSC  23.0
0107:  BSF    06.2
....................    fila(3); 
0108:  MOVLW  03
0109:  MOVWF  30
010A:  CALL   073
....................      RB3=prende; 
010B:  BTFSS  24.0
010C:  BCF    06.3
010D:  BTFSC  24.0
010E:  BSF    06.3
....................      waitletra(); 
010F:  CALL   0C7
.................... 	    
.................... 	 RB3=apaga; 
0110:  BTFSS  23.0
0111:  BCF    06.3
0112:  BTFSC  23.0
0113:  BSF    06.3
....................   fila(4); 
0114:  MOVLW  04
0115:  MOVWF  30
0116:  CALL   073
....................      RB4=prende; 
0117:  BTFSS  24.0
0118:  BCF    06.4
0119:  BTFSC  24.0
011A:  BSF    06.4
....................      waitletra(); 
011B:  CALL   0C7
.................... 	    
.................... 	 RB4=apaga; 
011C:  BTFSS  23.0
011D:  BCF    06.4
011E:  BTFSC  23.0
011F:  BSF    06.4
....................    fila(5); 
0120:  MOVLW  05
0121:  MOVWF  30
0122:  CALL   073
....................      RB5=prende; 
0123:  BTFSS  24.0
0124:  BCF    06.5
0125:  BTFSC  24.0
0126:  BSF    06.5
....................      waitletra(); 
0127:  CALL   0C7
.................... 	    
.................... 	 RB5=apaga; 
0128:  BTFSS  23.0
0129:  BCF    06.5
012A:  BTFSC  23.0
012B:  BSF    06.5
....................    fila(6); 
012C:  MOVLW  06
012D:  MOVWF  30
012E:  CALL   073
....................      RB6=prende; 
012F:  BTFSS  24.0
0130:  BCF    06.6
0131:  BTFSC  24.0
0132:  BSF    06.6
....................      waitletra();  
0133:  CALL   0C7
....................  
....................       
.................... } 
0134:  BCF    0A.3
0135:  BCF    0A.4
0136:  GOTO   186 (RETURN)
....................  
....................  
....................  
.................... /* 
.................... void set0(void){ 
....................  RD0=0;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
.................... void set1(void){ 
....................  RD0=1;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
....................  
.................... */ 
.................... void reset(void){ 
....................  //for (irst=0;irst<20;irst++)set0(); 
....................  RD2=0;//data 
*
0068:  BCF    08.2
....................  waitjg(); 
0069:  CALL   063
....................  RD2=1;//clock	 
006A:  BSF    08.2
.................... } 
006B:  BCF    0A.3
006C:  BCF    0A.4
006D:  GOTO   163 (RETURN)
....................  
....................  
....................  
.................... /* 
.................... 	 RB0=0; 
.................... 	 RB1=0; 
.................... 	 RB2=0; 
.................... 	 RB3=0; 
.................... 	 RB4=0; 
.................... 	 RB5=0; 
.................... 	 RB6=0; 
....................   RD0=1;//data 
....................   RD1=1;//clock 
....................   RD2=1;//reset 
....................  
.................... //	PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
.................... //    PORTB_TRIS = 0b00000000; //1=ENTRADA, 0=SALIDA  
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
