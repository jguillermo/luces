CCS PCM C Compiler, Version 4.057, 7433               27-ago-10 03:46

               Filename: mainLuces.lst

               ROM used: 347 words (4%)
                         Largest free fragment is 2048
               RAM used: 34 (9%) at main() level
                         36 (10%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0F9
0003:  NOP
.................... #INCLUDE "C:\Archivos de programa\PICC\Devices\16f877a.h" 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOLVP,PUT,NOPROTECT 
.................... #USE delay(clock=20000000) 
*
008F:  MOVLW  3A
0090:  MOVWF  04
0091:  BCF    03.7
0092:  MOVF   00,W
0093:  BTFSC  03.2
0094:  GOTO   0A2
0095:  MOVLW  06
0096:  MOVWF  78
0097:  CLRF   77
0098:  DECFSZ 77,F
0099:  GOTO   098
009A:  DECFSZ 78,F
009B:  GOTO   097
009C:  MOVLW  7B
009D:  MOVWF  77
009E:  DECFSZ 77,F
009F:  GOTO   09E
00A0:  DECFSZ 00,F
00A1:  GOTO   095
.................... #BYTE PORTC=0x07  
.................... #BYTE PORTB=0x06  
.................... #BYTE PORTD=0x08  
....................  
.................... #BIT RC0=0x07.0 
.................... #BIT RC1=0x07.1 
.................... #BIT RC2=0x07.2 
.................... #BIT RC3=0x07.3 
.................... #BIT RC4=0x07.4 
....................  
.................... #BIT RB0=0x06.0 
.................... #BIT RB1=0x06.1 
.................... #BIT RB2=0x06.2 
.................... #BIT RB3=0x06.3 
.................... #BIT RB4=0x06.4 
.................... #BIT RB5=0x06.5 
.................... #BIT RB6=0x06.6 
....................  
.................... #BIT RD0=0x08.0//data 
.................... #BIT RD1=0x08.1//clock 
.................... #BIT RD2=0x08.2//reset 
....................  
.................... int i,apaga=1,prende=0; 
*
0104:  MOVLW  01
0105:  BCF    03.5
0106:  MOVWF  21
0107:  CLRF   22
.................... int letpos[16]={0,1,2,3,4,0,1,2,3,4,0,1,2,3,4,0}; 
0108:  CLRF   23
0109:  MOVWF  24
010A:  MOVLW  02
010B:  MOVWF  25
010C:  MOVLW  03
010D:  MOVWF  26
010E:  MOVLW  04
010F:  MOVWF  27
0110:  CLRF   28
0111:  MOVLW  01
0112:  MOVWF  29
0113:  MOVLW  02
0114:  MOVWF  2A
0115:  MOVLW  03
0116:  MOVWF  2B
0117:  MOVLW  04
0118:  MOVWF  2C
0119:  CLRF   2D
011A:  MOVLW  01
011B:  MOVWF  2E
011C:  MOVLW  02
011D:  MOVWF  2F
011E:  MOVLW  03
011F:  MOVWF  30
0120:  MOVLW  04
0121:  MOVWF  31
0122:  CLRF   32
.................... int const lether[5][7]={ 
.................... {0x00,0x00,0x00,0x00,0x00,0x00,0x00},  //  	vacio 
.................... {0x12,0x12,0x12,0x1E,0x12,0x12,0x12},  //  H 
.................... {0x0C,0x12,0x12,0x12,0x12,0x12,0x0C},  //  O 
.................... {0x1E,0x10,0x10,0x10,0x10,0x10,0x10},  //  L 
.................... {0x0E,0x04,0x04,0x04,0x04,0x04,0x0E},  //  	I 
.................... }; 
....................  
.................... //void waitjg(); 
.................... //void waitletra(); 
.................... void waitjg(){delay_us(2);}//delay_us(2) 
*
002B:  MOVLW  03
002C:  MOVWF  77
002D:  DECFSZ 77,F
002E:  GOTO   02D
002F:  RETLW  00
.................... void waitletra(){delay_ms(1);}//delay_us(500) 
*
008D:  MOVLW  01
008E:  MOVWF  3A
*
00A2:  RETLW  00
.................... long useg1=8; 
*
0123:  MOVLW  08
0124:  MOVWF  33
0125:  CLRF   34
.................... //void set0(); 
.................... //void set1(); 
.................... void reset(); 
.................... void set01(); 
.................... void fila(int let,int nu); 
.................... void letrero(); 
....................  
.................... void main(void) 
.................... { 
*
00F9:  CLRF   04
00FA:  BCF    03.7
00FB:  MOVLW  1F
00FC:  ANDWF  03,F
00FD:  BSF    03.5
00FE:  BSF    1F.0
00FF:  BSF    1F.1
0100:  BSF    1F.2
0101:  BCF    1F.3
0102:  MOVLW  07
0103:  MOVWF  1C
....................     long nh=0; 
*
0128:  CLRF   36
0129:  CLRF   37
.................... 	//long useg1=50; 
.................... 	int aux,iaux; 
.................... 	set_tris_b(0x00);  // PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
012A:  MOVLW  00
012B:  BSF    03.5
012C:  MOVWF  06
.................... 	set_tris_d(0x00);  
012D:  MOVWF  08
.................... 	set_tris_c(0x00); 
*
0126:  MOVLW  FF
0127:  MOVWF  35
*
012E:  MOVWF  07
012F:  BCF    03.5
0130:  MOVWF  35
....................     PORTB=0; 
0131:  CLRF   06
....................     PORTC=0; 
0132:  CLRF   07
.................... 	PORTD=1; 
0133:  MOVLW  01
0134:  MOVWF  08
.................... 	reset(); 
0135:  GOTO   030
....................  
.................... 	while(TRUE) 
....................     {	 
.................... 			nh++;	 
0136:  INCF   36,F
0137:  BTFSC  03.2
0138:  INCF   37,F
.................... 	 	if (nh<=useg1) 
0139:  MOVF   37,W
013A:  SUBWF  34,W
013B:  BTFSS  03.0
013C:  GOTO   143
013D:  BTFSS  03.2
013E:  GOTO   142
013F:  MOVF   36,W
0140:  SUBWF  33,W
0141:  BTFSC  03.0
.................... 	   	    letrero(); 
0142:  GOTO   0A3
....................      	else    
....................       	   {nh=0; 
0143:  CLRF   37
0144:  CLRF   36
.................... 	      	aux=letpos[0]; 
0145:  MOVF   23,W
0146:  MOVWF  38
.................... 	      	for(iaux=0;iaux<16;iaux++) 
0147:  CLRF   39
0148:  MOVF   39,W
0149:  SUBLW  0F
014A:  BTFSS  03.0
014B:  GOTO   159
.................... 	      		{ aux++; 
014C:  INCF   38,F
.................... 	      	 	  if (aux==5)aux=0; 
014D:  MOVF   38,W
014E:  SUBLW  05
014F:  BTFSC  03.2
0150:  CLRF   38
.................... 			      letpos[iaux]=aux;		      	 
0151:  MOVLW  23
0152:  ADDWF  39,W
0153:  MOVWF  04
0154:  BCF    03.7
0155:  MOVF   38,W
0156:  MOVWF  00
.................... 	      	    }      	    	  
0157:  INCF   39,F
0158:  GOTO   148
....................       	   } 
....................      }      	 
0159:  GOTO   136
.................... 	 			 
.................... } 
....................  
....................  
.................... /*   
....................  
.................... */ 
....................  
.................... void fila(int nu){ 
....................    //  reset(); 
015A:  SLEEP
....................    for  (i=0;i<16;i++) 
*
003B:  CLRF   20
003C:  MOVF   20,W
003D:  SUBLW  0F
003E:  BTFSS  03.0
003F:  GOTO   08C
....................     { 
....................      PORTC=lether[letpos[i]][nu]; 
0040:  MOVLW  23
0041:  ADDWF  20,W
0042:  MOVWF  04
0043:  BCF    03.7
0044:  MOVF   00,W
0045:  MOVWF  3C
0046:  MOVLW  07
0047:  MOVWF  3D
*
006C:  MOVF   3A,W
006D:  ADDWF  78,W
006E:  CALL   004
006F:  MOVWF  78
0070:  MOVWF  07
.................... 	RD0=RC4;set01();	 
0071:  BTFSS  07.4
0072:  BCF    08.0
0073:  BTFSC  07.4
0074:  BSF    08.0
0075:  CALL   036
.................... 	RD0=RC3;set01(); 
0076:  BTFSS  07.3
0077:  BCF    08.0
0078:  BTFSC  07.3
0079:  BSF    08.0
007A:  CALL   036
.................... 	RD0=RC2;set01(); 
007B:  BTFSS  07.2
007C:  BCF    08.0
007D:  BTFSC  07.2
007E:  BSF    08.0
007F:  CALL   036
.................... 	RD0=RC1;set01(); 
0080:  BTFSS  07.1
0081:  BCF    08.0
0082:  BTFSC  07.1
0083:  BSF    08.0
0084:  CALL   036
.................... 	RD0=RC0;set01(); 
0085:  BTFSS  07.0
0086:  BCF    08.0
0087:  BTFSC  07.0
0088:  BSF    08.0
0089:  CALL   036
.................... 				 
.................... 		 
....................     } 
008A:  INCF   20,F
008B:  GOTO   03C
.................... } 
008C:  RETLW  00
....................  
.................... void set01(){ 
....................   
....................  waitjg(); 
*
0036:  CALL   02B
....................  RD1=0;//clock 
0037:  BCF    08.1
....................  waitjg(); 
0038:  CALL   02B
....................  RD1=1;//clock 
0039:  BSF    08.1
.................... } 
003A:  RETLW  00
.................... void letrero(){ 
....................  
....................      RB6=apaga; 
*
00A3:  BTFSS  21.0
00A4:  BCF    06.6
00A5:  BTFSC  21.0
00A6:  BSF    06.6
....................      fila(0); 
00A7:  CLRF   3A
00A8:  CALL   03B
....................      RB0=prende; 
00A9:  BTFSS  22.0
00AA:  BCF    06.0
00AB:  BTFSC  22.0
00AC:  BSF    06.0
....................      waitletra(); 
00AD:  CALL   08D
.................... 	    
.................... 	 RB0=apaga; 
00AE:  BTFSS  21.0
00AF:  BCF    06.0
00B0:  BTFSC  21.0
00B1:  BSF    06.0
....................      fila(1); 
00B2:  MOVLW  01
00B3:  MOVWF  3A
00B4:  CALL   03B
....................      RB1=prende; 
00B5:  BTFSS  22.0
00B6:  BCF    06.1
00B7:  BTFSC  22.0
00B8:  BSF    06.1
....................      waitletra(); 
00B9:  CALL   08D
.................... 	    
.................... 	 RB1=apaga; 
00BA:  BTFSS  21.0
00BB:  BCF    06.1
00BC:  BTFSC  21.0
00BD:  BSF    06.1
....................      fila(2); 
00BE:  MOVLW  02
00BF:  MOVWF  3A
00C0:  CALL   03B
....................      RB2=prende; 
00C1:  BTFSS  22.0
00C2:  BCF    06.2
00C3:  BTFSC  22.0
00C4:  BSF    06.2
....................      waitletra(); 
00C5:  CALL   08D
.................... 	    
.................... 	 RB2=apaga; 
00C6:  BTFSS  21.0
00C7:  BCF    06.2
00C8:  BTFSC  21.0
00C9:  BSF    06.2
....................      fila(3); 
00CA:  MOVLW  03
00CB:  MOVWF  3A
00CC:  CALL   03B
....................      RB3=prende; 
00CD:  BTFSS  22.0
00CE:  BCF    06.3
00CF:  BTFSC  22.0
00D0:  BSF    06.3
....................      waitletra(); 
00D1:  CALL   08D
.................... 	    
.................... 	 RB3=apaga; 
00D2:  BTFSS  21.0
00D3:  BCF    06.3
00D4:  BTFSC  21.0
00D5:  BSF    06.3
....................      fila(4); 
00D6:  MOVLW  04
00D7:  MOVWF  3A
00D8:  CALL   03B
....................      RB4=prende; 
00D9:  BTFSS  22.0
00DA:  BCF    06.4
00DB:  BTFSC  22.0
00DC:  BSF    06.4
....................      waitletra(); 
00DD:  CALL   08D
.................... 	    
.................... 	 RB4=apaga; 
00DE:  BTFSS  21.0
00DF:  BCF    06.4
00E0:  BTFSC  21.0
00E1:  BSF    06.4
....................      fila(5); 
00E2:  MOVLW  05
00E3:  MOVWF  3A
00E4:  CALL   03B
....................      RB5=prende; 
00E5:  BTFSS  22.0
00E6:  BCF    06.5
00E7:  BTFSC  22.0
00E8:  BSF    06.5
....................      waitletra(); 
00E9:  CALL   08D
.................... 	    
.................... 	 RB5=apaga; 
00EA:  BTFSS  21.0
00EB:  BCF    06.5
00EC:  BTFSC  21.0
00ED:  BSF    06.5
....................      fila(6); 
00EE:  MOVLW  06
00EF:  MOVWF  3A
00F0:  CALL   03B
....................      RB6=prende; 
00F1:  BTFSS  22.0
00F2:  BCF    06.6
00F3:  BTFSC  22.0
00F4:  BSF    06.6
....................      waitletra();  
00F5:  CALL   08D
....................       
.................... } 
00F6:  BCF    0A.3
00F7:  BCF    0A.4
00F8:  GOTO   159 (RETURN)
.................... /* 
.................... void set0(void){ 
....................  RD0=0;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
.................... void set1(void){ 
....................  RD0=1;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
....................  
.................... */ 
.................... void reset(void){ 
....................  //for (irst=0;irst<20;irst++)set0(); 
....................  RD2=0;//data 
*
0030:  BCF    08.2
....................  waitjg(); 
0031:  CALL   02B
....................  RD2=1;//clock	 
0032:  BSF    08.2
.................... } 
0033:  BCF    0A.3
0034:  BCF    0A.4
0035:  GOTO   136 (RETURN)
....................  
....................  
....................  
.................... /* 
.................... 	 RB0=0; 
.................... 	 RB1=0; 
.................... 	 RB2=0; 
.................... 	 RB3=0; 
.................... 	 RB4=0; 
.................... 	 RB5=0; 
.................... 	 RB6=0; 
....................   RD0=1;//data 
....................   RD1=1;//clock 
....................   RD2=1;//reset 
....................  
.................... //	PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
.................... //    PORTB_TRIS = 0b00000000; //1=ENTRADA, 0=SALIDA  
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
