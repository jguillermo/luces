CCS PCM C Compiler, Version 4.057, 7433               28-ago-10 14:30

               Filename: mainLuces.lst

               ROM used: 407 words (5%)
                         Largest free fragment is 2048
               RAM used: 34 (9%) at main() level
                         36 (10%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   133
0003:  NOP
.................... #INCLUDE "C:\Archivos de programa\PICC\Devices\16f877a.h" 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOLVP,PUT,NOPROTECT 
.................... #USE delay(clock=20000000) 
*
00C9:  MOVLW  3A
00CA:  MOVWF  04
00CB:  BCF    03.7
00CC:  MOVF   00,W
00CD:  BTFSC  03.2
00CE:  GOTO   0DC
00CF:  MOVLW  06
00D0:  MOVWF  78
00D1:  CLRF   77
00D2:  DECFSZ 77,F
00D3:  GOTO   0D2
00D4:  DECFSZ 78,F
00D5:  GOTO   0D1
00D6:  MOVLW  7B
00D7:  MOVWF  77
00D8:  DECFSZ 77,F
00D9:  GOTO   0D8
00DA:  DECFSZ 00,F
00DB:  GOTO   0CF
.................... #BYTE PORTC=0x07  
.................... #BYTE PORTB=0x06  
.................... #BYTE PORTD=0x08  
....................  
.................... #BIT RC0=0x07.0 
.................... #BIT RC1=0x07.1 
.................... #BIT RC2=0x07.2 
.................... #BIT RC3=0x07.3 
.................... #BIT RC4=0x07.4 
....................  
.................... #BIT RB0=0x06.0 
.................... #BIT RB1=0x06.1 
.................... #BIT RB2=0x06.2 
.................... #BIT RB3=0x06.3 
.................... #BIT RB4=0x06.4 
.................... #BIT RB5=0x06.5 
.................... #BIT RB6=0x06.6 
....................  
.................... #BIT RD0=0x08.0//data 
.................... #BIT RD1=0x08.1//clock 
.................... #BIT RD2=0x08.2//reset 
....................  
.................... int i,apaga=1,prende=0; 
*
013E:  MOVLW  01
013F:  BCF    03.5
0140:  MOVWF  21
0141:  CLRF   22
.................... int letpos[16]={0,1,2,3,4,5,6,7,8,9,10,11,12,0,1,2}; 
0142:  CLRF   23
0143:  MOVWF  24
0144:  MOVLW  02
0145:  MOVWF  25
0146:  MOVLW  03
0147:  MOVWF  26
0148:  MOVLW  04
0149:  MOVWF  27
014A:  MOVLW  05
014B:  MOVWF  28
014C:  MOVLW  06
014D:  MOVWF  29
014E:  MOVLW  07
014F:  MOVWF  2A
0150:  MOVLW  08
0151:  MOVWF  2B
0152:  MOVLW  09
0153:  MOVWF  2C
0154:  MOVLW  0A
0155:  MOVWF  2D
0156:  MOVLW  0B
0157:  MOVWF  2E
0158:  MOVLW  0C
0159:  MOVWF  2F
015A:  CLRF   30
015B:  MOVLW  01
015C:  MOVWF  31
015D:  MOVLW  02
015E:  MOVWF  32
.................... int const lether[13][7]={ 
.................... {0x00,0x00,0x00,0x00,0x00,0x00,0x00},  //  	vacio 
.................... {0x11,0x11,0x11,0x15,0x1B,0x1B,0x11},  //  M 
.................... {0x11,0x11,0x11,0x1F,0x11,0x11,0x0E},  //  A 
.................... {0x11,0x13,0x13,0x15,0x19,0x19,0x11},  //  N 
.................... {0x0E,0x11,0x11,0x11,0x11,0x11,0x11},  //  U 
.................... {0x11,0x11,0x11,0x1F,0x11,0x11,0x0E},  //  A 
.................... {0x1E,0x10,0x10,0x10,0x10,0x10,0x10},  //  L 
.................... {0x1F,0x04,0x04,0x04,0x04,0x04,0x1F},  //  I 
.................... {0x1E,0x09,0x09,0x09,0x09,0x09,0x1E},  //  D 
.................... {0x11,0x11,0x11,0x1F,0x11,0x11,0x0E},  //  A 
.................... {0x1E,0x09,0x09,0x09,0x09,0x09,0x1E},  //  D  
.................... {0x1F,0x10,0x10,0x1E,0x10,0x10,0x1F},  //  E 
.................... {0x0E,0x11,0x01,0x0E,0x10,0x11,0x0E},  //  S 
.................... }; 
....................  
.................... //void waitjg(); 
.................... //void waitletra(); 
.................... void waitjg(){delay_us(2);}//delay_us(2) 
*
0063:  MOVLW  03
0064:  MOVWF  77
0065:  DECFSZ 77,F
0066:  GOTO   065
0067:  RETLW  00
.................... void waitletra(){delay_ms(1);}//delay_us(500) 
*
00C7:  MOVLW  01
00C8:  MOVWF  3A
*
00DC:  RETLW  00
.................... long useg1=8; 
*
015F:  MOVLW  08
0160:  MOVWF  33
0161:  CLRF   34
.................... //void set0(); 
.................... //void set1(); 
.................... void reset(); 
.................... void set01(); 
.................... void fila(int let,int nu); 
.................... void letrero(); 
....................  
.................... void main(void) 
.................... { 
*
0133:  CLRF   04
0134:  BCF    03.7
0135:  MOVLW  1F
0136:  ANDWF  03,F
0137:  BSF    03.5
0138:  BSF    1F.0
0139:  BSF    1F.1
013A:  BSF    1F.2
013B:  BCF    1F.3
013C:  MOVLW  07
013D:  MOVWF  1C
....................     long nh=0; 
*
0164:  CLRF   36
0165:  CLRF   37
.................... 	//long useg1=50; 
.................... 	int aux,iaux; 
.................... 	set_tris_b(0x00);  // PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
0166:  MOVLW  00
0167:  BSF    03.5
0168:  MOVWF  06
.................... 	set_tris_d(0x00);  
0169:  MOVWF  08
.................... 	set_tris_c(0x00); 
*
0162:  MOVLW  FF
0163:  MOVWF  35
*
016A:  MOVWF  07
016B:  BCF    03.5
016C:  MOVWF  35
....................     PORTB=0; 
016D:  CLRF   06
....................     PORTC=0; 
016E:  CLRF   07
.................... 	PORTD=1; 
016F:  MOVLW  01
0170:  MOVWF  08
.................... 	reset(); 
0171:  GOTO   068
....................  
.................... 	while(TRUE) 
....................     {	 
.................... 			nh++;	 
0172:  INCF   36,F
0173:  BTFSC  03.2
0174:  INCF   37,F
.................... 	 	if (nh<=useg1) 
0175:  MOVF   37,W
0176:  SUBWF  34,W
0177:  BTFSS  03.0
0178:  GOTO   17F
0179:  BTFSS  03.2
017A:  GOTO   17E
017B:  MOVF   36,W
017C:  SUBWF  33,W
017D:  BTFSC  03.0
.................... 	   	    letrero(); 
017E:  GOTO   0DD
....................      	else    
....................       	   {nh=0; 
017F:  CLRF   37
0180:  CLRF   36
.................... 	      	aux=letpos[0]; 
0181:  MOVF   23,W
0182:  MOVWF  38
.................... 	      	for(iaux=0;iaux<16;iaux++) 
0183:  CLRF   39
0184:  MOVF   39,W
0185:  SUBLW  0F
0186:  BTFSS  03.0
0187:  GOTO   195
.................... 	      		{ aux++; 
0188:  INCF   38,F
.................... 	      	 	  if (aux==13)aux=0; 
0189:  MOVF   38,W
018A:  SUBLW  0D
018B:  BTFSC  03.2
018C:  CLRF   38
.................... 			      letpos[iaux]=aux;		      	 
018D:  MOVLW  23
018E:  ADDWF  39,W
018F:  MOVWF  04
0190:  BCF    03.7
0191:  MOVF   38,W
0192:  MOVWF  00
.................... 	      	    }      	    	  
0193:  INCF   39,F
0194:  GOTO   184
....................       	   } 
....................      }      	 
0195:  GOTO   172
.................... 	 			 
.................... } 
....................  
....................  
.................... /*   
....................  
.................... */ 
....................  
.................... void fila(int nu){ 
....................    //  reset(); 
0196:  SLEEP
....................    for  (i=0;i<16;i++) 
*
0073:  CLRF   20
0074:  MOVF   20,W
0075:  SUBLW  0F
0076:  BTFSS  03.0
0077:  GOTO   0C6
....................     { 
....................      PORTC=lether[letpos[i]][nu]; 
0078:  MOVLW  23
0079:  ADDWF  20,W
007A:  MOVWF  04
007B:  BCF    03.7
007C:  MOVF   00,W
007D:  MOVWF  3C
007E:  MOVLW  07
007F:  MOVWF  3D
*
00A4:  MOVF   3A,W
00A5:  ADDWF  78,W
00A6:  CALL   004
00A7:  MOVWF  78
00A8:  MOVWF  07
.................... 	RD0=RC4;set01();	 
00A9:  BTFSS  07.4
00AA:  BCF    08.0
00AB:  BTFSC  07.4
00AC:  BSF    08.0
00AD:  CALL   06E
.................... 	RD0=RC3;set01(); 
00AE:  BTFSS  07.3
00AF:  BCF    08.0
00B0:  BTFSC  07.3
00B1:  BSF    08.0
00B2:  CALL   06E
.................... 	RD0=RC2;set01(); 
00B3:  BTFSS  07.2
00B4:  BCF    08.0
00B5:  BTFSC  07.2
00B6:  BSF    08.0
00B7:  CALL   06E
.................... 	RD0=RC1;set01(); 
00B8:  BTFSS  07.1
00B9:  BCF    08.0
00BA:  BTFSC  07.1
00BB:  BSF    08.0
00BC:  CALL   06E
.................... 	RD0=RC0;set01(); 
00BD:  BTFSS  07.0
00BE:  BCF    08.0
00BF:  BTFSC  07.0
00C0:  BSF    08.0
00C1:  CALL   06E
.................... 		RD0=0;set01();			 
00C2:  BCF    08.0
00C3:  CALL   06E
.................... 		 
....................     } 
00C4:  INCF   20,F
00C5:  GOTO   074
.................... } 
00C6:  RETLW  00
....................  
.................... void set01(){ 
....................   
....................  waitjg(); 
*
006E:  CALL   063
....................  RD1=0;//clock 
006F:  BCF    08.1
....................  waitjg(); 
0070:  CALL   063
....................  RD1=1;//clock 
0071:  BSF    08.1
.................... } 
0072:  RETLW  00
.................... void letrero(){ 
....................  
....................      RB6=apaga; 
*
00DD:  BTFSS  21.0
00DE:  BCF    06.6
00DF:  BTFSC  21.0
00E0:  BSF    06.6
....................      fila(0); 
00E1:  CLRF   3A
00E2:  CALL   073
....................      RB0=prende; 
00E3:  BTFSS  22.0
00E4:  BCF    06.0
00E5:  BTFSC  22.0
00E6:  BSF    06.0
....................      waitletra(); 
00E7:  CALL   0C7
.................... 	    
.................... 	 RB0=apaga; 
00E8:  BTFSS  21.0
00E9:  BCF    06.0
00EA:  BTFSC  21.0
00EB:  BSF    06.0
....................      fila(1); 
00EC:  MOVLW  01
00ED:  MOVWF  3A
00EE:  CALL   073
....................      RB1=prende; 
00EF:  BTFSS  22.0
00F0:  BCF    06.1
00F1:  BTFSC  22.0
00F2:  BSF    06.1
....................      waitletra(); 
00F3:  CALL   0C7
.................... 	    
.................... 	 RB1=apaga; 
00F4:  BTFSS  21.0
00F5:  BCF    06.1
00F6:  BTFSC  21.0
00F7:  BSF    06.1
....................      fila(2); 
00F8:  MOVLW  02
00F9:  MOVWF  3A
00FA:  CALL   073
....................      RB2=prende; 
00FB:  BTFSS  22.0
00FC:  BCF    06.2
00FD:  BTFSC  22.0
00FE:  BSF    06.2
....................      waitletra(); 
00FF:  CALL   0C7
.................... 	    
.................... 	 RB2=apaga; 
0100:  BTFSS  21.0
0101:  BCF    06.2
0102:  BTFSC  21.0
0103:  BSF    06.2
....................      fila(3); 
0104:  MOVLW  03
0105:  MOVWF  3A
0106:  CALL   073
....................      RB3=prende; 
0107:  BTFSS  22.0
0108:  BCF    06.3
0109:  BTFSC  22.0
010A:  BSF    06.3
....................      waitletra(); 
010B:  CALL   0C7
.................... 	    
.................... 	 RB3=apaga; 
010C:  BTFSS  21.0
010D:  BCF    06.3
010E:  BTFSC  21.0
010F:  BSF    06.3
....................      fila(4); 
0110:  MOVLW  04
0111:  MOVWF  3A
0112:  CALL   073
....................      RB4=prende; 
0113:  BTFSS  22.0
0114:  BCF    06.4
0115:  BTFSC  22.0
0116:  BSF    06.4
....................      waitletra(); 
0117:  CALL   0C7
.................... 	    
.................... 	 RB4=apaga; 
0118:  BTFSS  21.0
0119:  BCF    06.4
011A:  BTFSC  21.0
011B:  BSF    06.4
....................      fila(5); 
011C:  MOVLW  05
011D:  MOVWF  3A
011E:  CALL   073
....................      RB5=prende; 
011F:  BTFSS  22.0
0120:  BCF    06.5
0121:  BTFSC  22.0
0122:  BSF    06.5
....................      waitletra(); 
0123:  CALL   0C7
.................... 	    
.................... 	 RB5=apaga; 
0124:  BTFSS  21.0
0125:  BCF    06.5
0126:  BTFSC  21.0
0127:  BSF    06.5
....................      fila(6); 
0128:  MOVLW  06
0129:  MOVWF  3A
012A:  CALL   073
....................      RB6=prende; 
012B:  BTFSS  22.0
012C:  BCF    06.6
012D:  BTFSC  22.0
012E:  BSF    06.6
....................      waitletra();  
012F:  CALL   0C7
....................       
.................... } 
0130:  BCF    0A.3
0131:  BCF    0A.4
0132:  GOTO   195 (RETURN)
.................... /* 
.................... void set0(void){ 
....................  RD0=0;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
.................... void set1(void){ 
....................  RD0=1;//data 
....................  waitjg(); 
....................  RD1=0;//clock 
....................  waitjg(); 
....................  RD1=1;//clock 
.................... } 
....................  
.................... */ 
.................... void reset(void){ 
....................  //for (irst=0;irst<20;irst++)set0(); 
....................  RD2=0;//data 
*
0068:  BCF    08.2
....................  waitjg(); 
0069:  CALL   063
....................  RD2=1;//clock	 
006A:  BSF    08.2
.................... } 
006B:  BCF    0A.3
006C:  BCF    0A.4
006D:  GOTO   172 (RETURN)
....................  
....................  
....................  
.................... /* 
.................... 	 RB0=0; 
.................... 	 RB1=0; 
.................... 	 RB2=0; 
.................... 	 RB3=0; 
.................... 	 RB4=0; 
.................... 	 RB5=0; 
.................... 	 RB6=0; 
....................   RD0=1;//data 
....................   RD1=1;//clock 
....................   RD2=1;//reset 
....................  
.................... //	PORTA_TRIS = 0b11000000; //1=ENTRADA, 0=SALIDA  
.................... //    PORTB_TRIS = 0b00000000; //1=ENTRADA, 0=SALIDA  
....................  
....................  
.................... */ 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
